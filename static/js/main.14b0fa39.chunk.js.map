{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","selectTodo","setViewChecker","viewChecker","useState","selectedButtonIndex","setSelectedButtonIndex","className","map","todo","index","id","completed","classNames","title","onClick","type","TodoFilter","setFilter","filter","inputFilter","inputFilterValue","onChange","value","event","target","placeholder","style","pointerEvents","Loader","TodoModal","selectedtodo","closeSelectTodo","user","setUser","useEffect","userId","href","email","name","App","setTodos","loading","setLoading","selectedTodo","setSelectedTodo","setInputFilter","filterTodos","preparedTodos","getFilterTodos","visibleTodos","query","normalizedQuery","trim","toLowerCase","copyTodos","includes","inputFilterTodos","finally","length","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14b0fa39.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  selectTodo: (item:Todo) => void,\n  setViewChecker: (state:boolean) => void,\n  viewChecker: boolean,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectTodo,\n  setViewChecker,\n  viewChecker,\n}) => {\n  // eslint-disable-next-line max-len\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState<number | null>(null);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo, index) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                onClick={() => {\n                  selectTodo(todo);\n                  setViewChecker(true);\n                  setSelectedButtonIndex(index);\n                }}\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className={`far ${selectedButtonIndex === index && viewChecker ? 'fa-eye-slash' : 'fa-eye'}`} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  setFilter: (value:React.ChangeEvent<HTMLSelectElement>) => void,\n  filter: string,\n  inputFilter: (event: string) => void,\n  inputFilterValue:string,\n};\nexport const TodoFilter:React.FC<Props> = ({\n  setFilter,\n  filter,\n  inputFilter,\n  inputFilterValue,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={setFilter}\n            value={filter}\n            data-cy=\"statusSelect\"\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          onChange={(event) => {\n            inputFilter(event.target.value);\n          }}\n          value={inputFilterValue}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputFilterValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={() => {\n                inputFilter('');\n              }}\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\n\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedtodo: Todo,\n  closeSelectTodo: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedtodo,\n  closeSelectTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectedtodo.userId)\n      .then(setUser);\n  }, [selectedtodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(!user) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedtodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={closeSelectTodo}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedtodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectedtodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const FILTER_ALL = 'all';\nexport const FILTER_COMPLETE = 'completed';\nexport const FILTER_ACTIVE = 'active';\n\nfunction getFilterTodos(todos:Todo[], filter:string):Todo[] {\n  const preparedTodos = [...todos];\n\n  if (filter === FILTER_ALL) {\n    return preparedTodos;\n  }\n\n  if (filter === FILTER_COMPLETE) {\n    return preparedTodos.filter(todo => todo.completed);\n  }\n\n  if (filter === FILTER_ACTIVE) {\n    return preparedTodos.filter(todo => !todo.completed);\n  }\n\n  return preparedTodos;\n}\n\nfunction inputFilterTodos(todos:Todo[], query:string) {\n  const normalizedQuery = query.trim().toLowerCase();\n  let copyTodos = [...todos];\n\n  if (normalizedQuery) {\n    copyTodos = copyTodos.filter(\n      todo => todo.title.toLowerCase().includes(normalizedQuery),\n    );\n  }\n\n  return copyTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState(FILTER_ALL);\n  const [inputFilter, setInputFilter] = useState('');\n  const [viewChecker, setViewChecker] = useState(false);\n\n  const filterTodos = getFilterTodos(todos, filter);\n  const visibleTodos = inputFilterTodos(filterTodos, inputFilter);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const filterChange = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value);\n  };\n\n  const selectTodo = (item: Todo) => {\n    setSelectedTodo(item);\n  };\n\n  const closeSelectTodo = () => {\n    setSelectedTodo(null);\n    setViewChecker(false);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={filterChange}\n                filter={filter}\n                inputFilter={setInputFilter}\n                inputFilterValue={inputFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={visibleTodos}\n                  selectTodo={selectTodo}\n                  setViewChecker={setViewChecker}\n                  viewChecker={viewChecker}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedtodo={selectedTodo}\n          closeSelectTodo={closeSelectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}